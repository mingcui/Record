#url#
https://wiki.hybris.com/dashboard.action  wikiaccount/qq.com
https://wiki.hybris.com/display/release5/Installation#Installation-1.DownloadandUnpackPackages  (about install )
https://wiki.hybris.com/display/release5/hybris+Server      ï¼ˆfor install hybris server)
https://wiki.hybris.com/display/release5/Installation        (for install on production or develop environment)
##install on centos##
1.  prepare for install
     1-1) build required envrioment =>
          yum -y install java mysqld
          service mysqld start
      1-2) create  user for hybirs system
           useradd hybris
           passwd hybris
2. install
      download install package (zip file)
      unzip file to /opt/
3. set up
     3-1) build the hybris Commerce Suite =>
          cd /opt/hybris/hybris/bin/platform
         .  ./setantenv.sh
                  Press the Enter key to use the default, the develop configuration template
          ant clean all 
    3-2) set as service
          create init script  =>
             /etc/init.d/hybris
             chmod 755 /etc/init.d/hybris
          set auto start =>
             chkconfig --add hybris
             chkconfig hybris on
     3-3) start service
           service hybris start
4. configure
      config db
         4-1) create data base  =>
                mysql -u root
                   CREATE DATABASE hybris_db;
                   GRANT all ON hybris_db.* TO 'hybris'@'localhost';
                   UPDATE mysql.user SET Password=PASSWORD('password') WHERE User='hybris';
                   FLUSH PRIVILEGES;
                   SELECT user,host FROM mysql.user; #show all users
                   exit
           4-2) checking  =>          
                  mysql -u hybris -h localhost -p #to log in as the hybris user
                        SHOW DATABASES; #to show all databases
                         exit
           4-3) restart db service =>
                   service mysqld restart
        setup db connetcor
          4-4) download the mysql db connector =>
                wget   http://dev.mysql.com/downloads/file.php?id=454397.
          4-5) put the jar-file in the  folder ${HYBRIS_BIN_DIR}/platform/lib/dbdriver/   =>
                mv /home/ec2-user/mysql-connector-java-5.1.34-bin.jar /home/hybris/hybris/bin/platform/lib/dbdriver/mysql-connector-java-5.1.34-bin.jar
                chown hybris:hybris /home/hybris/hybris/bin/platform/lib/dbdriver/mysql-connector-java-5.1.34-bin.jar #to set the owner and group to hybris
         configure properties
          4-6) vi /home/hybris/hybris/bin/platform/project.properties =>
                 db.url=jdbc:mysql://localhost/hybris_db?useConfigs=maxPerformance
                 db.driver=com.mysql.jdbc.Driver db.username=hybris
                 db.password={password}
                 db.tableprefix=hybris_db
                 mysql.allow.fractional.seconds=true
                 mysql.optional.tabledefs=CHARSET=utf8 COLLATE=utf8_bin    
                 mysql.tabletype=InnoDB #hsqldb.usecachedtables=true
        edit config
         4-7) vi /etc/my.cnf  =>
                 innodb_flush_log_at_trx_commit=0
        rebuild hybris
         4-8) cd /home/hybris/hybris/bin/platform
                  . ./setantenv.sh
                  ant clean all
5. restart and check
    service hybris restart
    http://localhost:9001

####set up hybris cluster###
Project: hybris cluster delpoy
Environment:
    node1: VT-1 (10.202.16.208 centos6.7 hybris5.7)
    node2: VT-2 (10.202.16.226 centos6.7 hybris5.7)
configure:
    1 ) on node1
      add below to local.properties ==>
  vi /app/hybris/hybris/config/local.properties
#for cluster
clustermode=true
cluster.id=0
cluster.maxid=3
cluster.broadcast.methods=jgroups
cluster.broadcast.method.jgroups=de.hybris.platform.cluster.jgroups.JGroupsBroadcastMethod
cluster.broadcast.method.jgroups.tcp.bind_addr=10.202.16.208
cluster.broadcast.method.jgroups.tcp.bind_port=7800
cluster.broadcast.method.jgroups.channel.name=hybris-broadcast
cluster.broadcast.method.jgroups.configuration=jgroups-tcp.xml


    2 ) on node2
     vi /app/hybris/hybris/config/local.properties
#for cluster
clustermode=true
cluster.id=1
cluster.maxid=3
cluster.broadcast.methods=jgroups  
cluster.broadcast.method.jgroups=de.hybris.platform.cluster.jgroups.JGroupsBroadcastMethod
cluster.broadcast.method.jgroups.tcp.bind_addr=10.202.16.226
cluster.broadcast.method.jgroups.tcp.bind_port=7800
cluster.broadcast.method.jgroups.channel.name=hybris-broadcast
cluster.broadcast.method.jgroups.configuration=jgroups-tcp.xml

   3 ) jgroup tcp configure:
<!-- TCP based stack, with flow control and message bundling. This is usually used when IP multicasting cannot be used in a network,
         e.g. because it is disabled (routers discard multicast).  -->
<config xmlns="urn:org:jgroups" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:org:jgroups http://www.jgroups.org/schema/JGroups-3.0.xsd">
    <TCP loopback="true"
        recv_buf_size="${tcp.recv_buf_size:20M}"
        send_buf_size="${tcp.send_buf_size:640K}"
        discard_incompatible_packets="true"
        max_bundle_size="64K"
        max_bundle_timeout="30"
        enable_bundling="true"
        use_send_queues="true"
        sock_conn_timeout="300"
        timer_type="new"
        timer.min_threads="4"
        timer.max_threads="10"
        timer.keep_alive_time="3000"
        timer.queue_max_size="500"
        thread_pool.enabled="true"
        thread_pool.min_threads="1"
        thread_pool.max_threads="10"
        thread_pool.keep_alive_time="5000"
        thread_pool.queue_enabled="false"
        thread_pool.queue_max_size="100"
        thread_pool.rejection_policy="discard"
        oob_thread_pool.enabled="true"
        oob_thread_pool.min_threads="1"
        oob_thread_pool.max_threads="8"
        oob_thread_pool.keep_alive_time="5000"
        oob_thread_pool.queue_enabled="false"
        oob_thread_pool.queue_max_size="100"
        oob_thread_pool.rejection_policy="discard"
        bind_addr="${hybris.jgroups.bind_addr}"
        bind_port="${hybris.jgroups.bind_port}" />

    <JDBC_PING connection_driver="${hybris.database.driver}"
        connection_password="${hybris.database.password}"
        connection_username="${hybris.database.user}"
        connection_url="${hybris.database.url}"
        initialize_sql="${hybris.jgroups.schema}"/>

    <MERGE2 min_interval="10000" max_interval="30000" />
    <FD_SOCK />
    <FD timeout="3000" max_tries="3" />
    <VERIFY_SUSPECT timeout="1500" />
    <BARRIER />
    <pbcast.NAKACK use_mcast_xmit="true" exponential_backoff="500" discard_delivered_msgs="true" />
    <UNICAST />
    <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000" max_bytes="4M" />
    <pbcast.GMS print_local_addr="true" join_timeout="3000" view_bundling="true" />
    <UFC max_credits="2M" min_threshold="0.4" />
    <MFC max_credits="2M" min_threshold="0.4" />
    <FRAG2 frag_size="60K" />
    <pbcast.STATE_TRANSFER />
</config>


   4 ) check:
access hac(9001):
user:admin
passwd: nimda
   5 ) configure session tomcat session replication
     5-1) enable member ship
     in both node vi /app/hybirs/hybris/bin/platform/tomcat/conf/server.xml, add bleow in <Engine name="Catalina"...>...</Engine>
<Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"
       channelSendOptions="8">
 
   <Manager className="org.apache.catalina.ha.session.DeltaManager"
          expireSessionsOnShutdown="false"
          notifyListenersOnReplication="true"/>
 
   <Channel className="org.apache.catalina.tribes.group.GroupChannel">
      <Membership className="org.apache.catalina.tribes.membership.McastService"
               address="10.202.16.226"       #this is the other node's ip
               port="45564"
               frequency="500"
               dropTime="3000"/>
      <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
              address="auto"
              port="4000"
              autoBind="100"
              selectorTimeout="5000"
              maxThreads="6"/>
 
      <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
         <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
      </Sender>
      <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
      <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"/>
   </Channel>
 
   <Valve className="org.apache.catalina.ha.tcp.ReplicationValve" filter=""/>
   <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>
 
 
   <ClusterListener className="org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"/>
   <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
</Cluster>

     5-2) configure session manager for all extensions
    vi server.xml replace ->
<!-- 'yacceleratorstorefront' extension's context for tenant 'master' -->
<Manager pathname="" />                              to
<Manager className="org.apache.catalina.ha.session.DeltaManager" expireSessionsOnShutdown="false" notifyListenersOnReplication="true" />

     ant clean all
     
###hybris cluster with LB and reverse proxy###
Project: nginx LB + reverse proxy + hybris cluster
Enverionment:
         LB: web-1 (centos6.5 nginx1.8.1)
         proxy:
             web-a-mysql (centos6.5 mysql5.6 httpd)
             web-2 (centos6.5 nginx1.8.1)
         hybris cluster:
             VT-1 (centos6.5 hybris5.7)
             VT-2 (centos6.5 hybris5.7)
Deploy:
 1 ) Deploy LB on web-1 (10.202.21.59):
    vi nginx.d => add before include
 upstream hybris {
      ip_hash;
      server 10.202.21.46:443;
      server 10.202.21.50:443;
    }
 
2 ) Deploy proxy:
   2-1 ) setup apache http reverse proxy on web-a-mysql(10.202.21.46)
        vi /etc/httpd/conf.d/hybris-443.conf   =>
NameVirtualHost *:443

<VirtualHost *:443>
ServerName 10.202.21.46
ServerAlias hybris
SSLEngine on
SSLProxyEngine on
SSLCertificateFile /etc/httpd/conf.d/web-a-mysql.cert
SSLCertificateKeyFile /etc/httpd/conf.d/web-a-mysql.key
#DocumentRoot "/var/www/html/hybris/bin/ext-template/yacceleratorstorefront/web/webroot"
DocumentRoot "/var/www/html/hybris/"
ProxyRequests Off
<Directory "/var/www/html/hybris">

    Options -Indexes

    AllowOverride None

    Order allow,deny

    Allow from all

   </Directory>
ProxyPass / https://10.202.16.208:9002/
ProxyPassReverse / https://10.202.16.208:9002/
</VirtualHost>    

   
   2-2 ) set up nginx reverse proxy on web-2 (102.202.21.50) 
      vi /etc/nginx/conf.d/hybris.conf  =>
server {
   ### open ssl ###
    listen 443;
    server_name 10.202.21.50;
    ssl on;
    ssl_certificate /etc/nginx/conf.d/web-2.cert;
    ssl_certificate_key /etc/nginx/conf.d/web-2.key;
   ### set reverse proxy
    root /usr/share/nginx/html/;            #hybris static resource (_ui) under this directory 
    
    location /yacceleratorstorefront/_ui/ {                  #request uri (_ui) pass to local directory 
      root /usr/share/nginx/html/hybris/;
    }
#### these commented 
    #    location ~* .*.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip)$ {
#      root /usr/share/nginx/html/hybris/ext-template/yacceleratorstorefront/web/webroot/_ui/;
#    #  index index.html index.htm index.jsp index.do index.css;
#      expires 30d;
#    }

#    location ~ .*.(js|css)?$ {
#      root /usr/share/nginx/html/hybris/ext-template/yacceleratorstorefront/web/webroot/_ui/;
#      expires 1h;
#    }

    location ~* .*.(jsp|do|php|cgi|jhtml)?$ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass https://10.202.16.226:9002;

    }
 }

